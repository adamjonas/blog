<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: minitest | Hack hack hack...]]></title>
  <link href="http://adamjonas.com/blog/categories/minitest/atom.xml" rel="self"/>
  <link href="http://adamjonas.com/"/>
  <updated>2016-05-26T12:26:52-04:00</updated>
  <id>http://adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MiniTest::Spec]]></title>
    <link href="http://adamjonas.com/blog/minitest-spec/"/>
    <updated>2012-10-24T13:30:00-04:00</updated>
    <id>http://adamjonas.com/blog/minitest-spec</id>
    <content type="html"><![CDATA[<p><code>ruby MiniTest Spec Matchers
obj.must_be(operator, expected) - for example, 10.must_be :&lt; , 11
obj.must_be_close_to - the equivalent of assert_in_delta
obj.must_be_empty - Fails unless obj.empty?
obj.must_be_instance_of(klass) - Fails unless obj.class == klass
obj.must_be_kind_of(klass) - Fails unless obj is of class klass or klass is one of its superclasses.
obj.must_be_nil
obj.must_be_same_as - tests for true object equality
lambda {}.must_be_silent
obj.must_be_within_delta
obj.must_be_within_epsilon
obj.must_equal(other) - Does a ==/eql? comparison between two objects.
obj.must_include(other)
obj.must_match(regex) - A regular expression match, e.g. "hello".must_match /w+/
lambda {}.must_output(stdout, [stderr..]) - The block should have certain output on stdout or stderr. Set stdout to nil just to check stderr.
lambda {}.must_raise(exception)
obj.must_respond_to(message)
obj.must_throw(sym)
</code></p>

<p><code>ruby Negative Matchers too
wont_be
wont_be_empty
wont_be_instance_of
wont_be_kind_of
wont_be_nil
wont_be_same_as
wont_equal
wont_include
wont_match
wont_respond_to
</code></p>
]]></content>
  </entry>
  
</feed>
