<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: authentication | Hack hack hack...]]></title>
  <link href="http://adamjonas.com/blog/categories/authentication/atom.xml" rel="self"/>
  <link href="http://adamjonas.com/"/>
  <updated>2016-07-27T11:39:03-04:00</updated>
  <id>http://adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FIS Day28]]></title>
    <link href="http://adamjonas.com/blog/fis-day28/"/>
    <updated>2012-11-14T10:10:00-05:00</updated>
    <id>http://adamjonas.com/blog/fis-day28</id>
    <content type="html"><![CDATA[<h2>Authentication</h2>

<ul>
<li>http is stateless</li>
<li><p>we pass along with the request is our cookie</p>

<ul>
<li>the cookie lives on the client, which means we can't trust it</li>
</ul>
</li>
<li><p>cookie has a lot of raw data</p>

<ul>
<li>you don't really want to put data on the client</li>
<li>except the token: which is just a primary key for their session on my server</li>
</ul>
</li>
<li><p>session id in the cookie identifies the session</p></li>
<li><p>cookies on the browser/sessions are on the server</p>

<ul>
<li>the cookie is used to access the session</li>
</ul>
</li>
<li><p>Form_for requires an ActiveRecord instance -> it needs a model</p>

<ul>
<li>form_tag(sessions_path)</li>
</ul>
</li>
</ul>


<p>```ruby Session Controller
skip_before_filter :login_required, :only => :new, :create</p>

<h1>this is needed you will need to login before you login. #Need to do this in the user controller as well.</h1>

<p>def create
  user = User.find_by_email(params[:email])</p>

<p>  if user</p>

<pre><code>session[:user_id] = @user.id
</code></pre>

<p>  else</p>

<pre><code>flash[:notice] =&gt; 'login failed'
redirect :new
</code></pre>

<p>  end
end</p>

<p>def destroy
  session[:user_id] = nil
  reset_session
end
```</p>

<p>```ruby Application Controller
class Application Controller
  def login_required</p>

<pre><code>unless current_user
  redirect_url login_path, :notice =&gt; "please login"
</code></pre>

<p>  end</p>

<p>  def current_user</p>

<pre><code>@current_user ||= User.find_by_id(session[:user_id])
</code></pre>

<p>  end
  helper_method :current_user</p>

<p>  def logged_in?</p>

<pre><code>true if current_user
</code></pre>

<p>  end
  helper_method :logged_in?</p>

<p>end
```</p>

<ul>
<li><p>In user model: <code>has_secure_password</code></p>

<ul>
<li>bcrypt</li>
<li>password confirmation is optional with has_secure_password</li>
<li>if a hacker gains access to your logs and you don't have the password field filtered, they can see all the passwords</li>
</ul>
</li>
<li><p><a href="http://www.dshield.org/diary.html?storyid=11110">hashing passwords</a></p></li>
</ul>


<p><code>Order.update(12, :name =&gt; "Barney", :email =&gt; "barney@bedrock.com")</code></p>

<ul>
<li>is equivalent to</li>
</ul>


<p><code>Order.find(12).update_attributes(:name =&gt; "Barney", :email =&gt; "barney@bedrock.com")</code></p>

<h3>MISC</h3>

<ul>
<li><a href="http://chrispederick.com/work/web-developer/features/">Web dev tool</a></li>
<li><a href="https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote">delete local and remote branches</a></li>
<li><a href="http://pusher.com/tutorials">pusher</a> better than socket.io

<ul>
<li><a href="https://github.com/tarnfeld/PusherChat-Rails">pusher chat</a></li>
</ul>
</li>
<li><p><a href="http://socrates.io/">socrates.io</a></p></li>
<li><p>Throw this at the top for a place for flash notices</p>

<ul>
<li><code>&lt;%= notice %&gt;</code></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[has_secured_password]]></title>
    <link href="http://adamjonas.com/blog/has-secured-password/"/>
    <updated>2012-07-18T15:23:00-04:00</updated>
    <id>http://adamjonas.com/blog/has-secured-password</id>
    <content type="html"><![CDATA[<p><a href="http://railscasts.com/episodes/270-authentication-in-rails-3-1">Rails Cast on Authentication Rails 3.1</a>
also want to check out <a href="http://railscasts.com/episodes/250-authentication-from-scratch">Rails cast on Authentication from Scratch</a></p>

<p>The user model rails allows you to call
<code>ruby has_secure_password
class User &lt; ActiveRecord::Base
  attr_accessible :email, :password, :password_confirmation
  has_secure_password
  validates_presence_of :password, :on =&gt; :create
end
</code>
You will likely want to add validation for the email address as well, but that's outside the scope of this...</p>

<p>The has_secure_password setting automatically adds validation for mismatched password between the password and password confirmation fields.</p>

<h3>Helper Methods: specifically :current_user</h3>

<p>See the <a href="/blog/2012/07/18/rails-helpers/">post on this</a>.</p>

<h3>SSL</h3>

<p>can also add options for ssl with the simple line in the ApplicationController:
<code>ruby
protect_from_forgery
force_ssl
</code>
This will only be reflected in production and test environments NOT development...</p>
]]></content>
  </entry>
  
</feed>
