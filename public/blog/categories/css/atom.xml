<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CSS | Hack hack hack...]]></title>
  <link href="http://adamjonas.com/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://adamjonas.com/"/>
  <updated>2016-07-27T11:39:03-04:00</updated>
  <id>http://adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CSS restyle]]></title>
    <link href="http://adamjonas.com/blog/css-restyle/"/>
    <updated>2016-01-05T10:13:00-05:00</updated>
    <id>http://adamjonas.com/blog/css-restyle</id>
    <content type="html"><![CDATA[<p>#</p>

<h2>Block, Element, Modifier (BEM)</h2>

<ul>
<li><p><a href="https://en.bem.info/">site</a></p></li>
<li><p>containers and objects are more modular</p></li>
<li><p>layouts aren't reused</p></li>
<li><p>clearfix issue</p>

<ul>
<li>using psuedo element hack</li>
</ul>
</li>
<li><p>media element</p>

<ul>
<li>object in css methodology</li>
</ul>
</li>
<li><p>containers</p>

<ul>
<li><p>an element that can contain other things -> more container-ish</p>

<ul>
<li>doesn't usually contain other elements</li>
</ul>
</li>
<li><p>any decendents are named-spaced of the parent</p>

<ul>
<li>e.g. <code>.sample-object</code> and <code>.sample-object__child</code></li>
<li>child is indicated by double underscore</li>
<li>you should expect to see similar classes up the DOM

<ul>
<li>e.g. <code>&lt;div class='level'&gt;&lt;div
class='level__inner'&gt;&lt;/div&gt;&lt;/div&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li>options

<ul>
<li><code>&lt;div style-color='red'&gt;</code></li>
<li><code>&lt;dic data-count='16'&gt;</code></li>
</ul>
</li>
<li>extensions

<ul>
<li>modifiers have double dash</li>
<li>you should expect to see similar class within the same div

<ul>
<li>e.g. <code>&lt;div class='module module--island module--island--cap'&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li>modules

<ul>
<li>usually have a head/body/footer</li>
<li>provides margin around it, background and borders</li>
</ul>
</li>
</ul>
</li>
<li><p>object</p>

<ul>
<li>an element that doesn't contain other elements as opposed to
objects which are more like containers</li>
<li>built to fill the width they are in, without explicit width</li>
<li>maybe a place where <code>!important</code> can live given that other
elements won't live within it.</li>
<li>expect more legos than objects</li>
</ul>
</li>
<li><p>levels</p>

<ul>
<li>makes vertical organization of the grids</li>
<li>they stack on top of eachother - levels of a building</li>
<li>centers a container in a strip that goes across the page</li>
</ul>
</li>
<li><p>utility class</p>

<ul>
<li>namespaced with url

<ul>
<li>with margin on the bottom</li>
<li><code>utl__m--bxl</code> => utility, margin, bottom extra large</li>
</ul>
</li>
</ul>
</li>
</ul>


<p> ## ?
  - how is this going to work with vendors (like icons)
  - vertical height for grid</p>

<ul>
<li>user bar is a layout

<ul>
<li>list horizontal</li>
</ul>
</li>
<li>level for bubble bar</li>
<li>remove rows and cols from markdown to json parser</li>
</ul>

]]></content>
  </entry>
  
</feed>
