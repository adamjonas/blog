<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: css | Hack hack hack...]]></title>
  <link href="http://adamjonas.com/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://adamjonas.com/"/>
  <updated>2016-05-26T12:27:21-04:00</updated>
  <id>http://adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[cantilever tricks]]></title>
    <link href="http://adamjonas.com/blog/cantilever-tricks/"/>
    <updated>2016-01-13T15:45:00-05:00</updated>
    <id>http://adamjonas.com/blog/cantilever-tricks</id>
    <content type="html"><![CDATA[<ul>
<li><p><code>@extend</code> means that the element just get a comment where the extended
class was previously.</p></li>
<li><p>inline svg styling is preferred -- think of it like an iframe.</p></li>
<li><p>gradients are crazy powerful: You can specify that the white area at the bottom starts at 50% from the bottom as specified here -- <code>background: linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,0.8) 50%, rgba(255,255,255,1) );</code>. And you can repeat it to make like a rainbow effect. Really cool.</p></li>
<li><p><a href="https://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/">baseline alignment</a></p></li>
</ul>


<h2>SVGs</h2>

<ul>
<li><a href="https://css-tricks.com/svg-use-with-external-reference-take-2/">Chris Coyer's SVG use external references</a></li>
<li><a href="https://24ways.org/2014/an-overview-of-svg-sprite-creation-techniques/">svg sprite creation techniques</a></li>
</ul>


<h2>OOCSS</h2>

<ul>
<li><a href="http://www.stubbornella.org/content/">Nicole Sullivan</a></li>
</ul>


<h2>Floating</h2>

<ul>
<li>if things are longer than expected -> it will overflow with
abosolutely positioned</li>
<li>more predictable behavior for overflow</li>
</ul>


<h2>border box</h2>

<ul>
<li><a href="http://www.w3schools.com/cssref/css3_pr_box-sizing.asp"><code>box-sizing: border-box</code></a> includes padding but not margin in the width
measurements.</li>
</ul>


<h2>whitespace</h2>

<ul>
<li><code>nowrap</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS]]></title>
    <link href="http://adamjonas.com/blog/css/"/>
    <updated>2012-09-06T14:38:00-04:00</updated>
    <id>http://adamjonas.com/blog/css</id>
    <content type="html"><![CDATA[<h3>Sprites</h3>

<p>loading two images as one and then changing the position like for a hover or focus.
<code>css
.logo {
  background: url(logo3.png);
  display: block;
  height: 75px;
  text-indent: -9999px;
  width: 250px;
}
.logo:hover, .logo:focus {
  background-position: 0 -75px;
}
.logo:active {
   background-position: 0 -150px;
}
</code></p>

<h3>Selectors</h3>

<p>Pseudo Classes:
:hover / :focus / :active / :visited
:first-child / :last-child / :only-child
:nth-child() / :nth-of-type()</p>

<p>Pseudo Elements:
:before / :after
:first-line / :first-letter</p>

<p><code>css Intervals
.hours li:nth-child(4n+1) {
  background: #c5c9cf;
}
</code>
li:nth-child(an+b){}
a = the intervals
b = the position (zero if it isn't set)</p>

<p><code>css Targeting the 1st line of the 1st para
p:first-child:first-line {
  font-weight: bold;
}
</code></p>

<p><code>css :before pseudo element
p:before {
 content: '-&gt;';
 margin-right: 5px;
}
</code></p>

<p>Adjacent sibling selectors:
:  have the following syntax: E1 + E2, where E2 is the subject of the selector. The selector matches if E1 and E2 share the same parent in the document tree and E1 immediately precedes E2, ignoring non-element nodes (such as text nodes and comments).</p>

<p>Thus, the following rule states that when a P element immediately follows a MATH element, it should not be indented:
```css
math + p { text-indent: 0 }</p>

<p>h1 + h2 { margin-top: -5mm }</p>

<p>h1.opener + h2 { margin-top: -5mm } <br/>
```</p>

<p>Relative lengths
em unit
:  Equal to the computed value of the ‘font-size’ property of the element on which it is used.
ex unit
:  Equal to the font's x-height.</p>

<p><code>css
p
{
  line-height:40px;
  letter-spacing:30px;
  word-spacing:10px;
  text-align:right;
  white-space:nowrap
}
</code></p>

<p>links:
- <a href="http://css-tricks.com/pseudo-class-selectors/">CSS Tricks- Pseudo Class Selectors</a>
- <a href="http://css-tricks.com/pseudo-element-roundup/">Amazing stuff pseudo-elements can do</a></p>
]]></content>
  </entry>
  
</feed>
