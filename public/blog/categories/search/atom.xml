<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: search | Hack hack hack...]]></title>
  <link href="http://adamjonas.com/blog/categories/search/atom.xml" rel="self"/>
  <link href="http://adamjonas.com/"/>
  <updated>2017-04-19T15:39:00-04:00</updated>
  <id>http://adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elastic Search]]></title>
    <link href="http://adamjonas.com/blog/elastic-search/"/>
    <updated>2017-03-10T11:38:00-05:00</updated>
    <id>http://adamjonas.com/blog/elastic-search</id>
    <content type="html"><![CDATA[<h2>Intro</h2>

<p>"elastic search is full text sreach engine, non-relational DB, analytics engine"</p>

<ul>
<li>has clustering and managed over REST</li>
<li><p>Suggest Explicit mapping</p></li>
<li><p>keywords -> non-analyzed data</p></li>
<li><p>full text -> analyzed</p></li>
<li><p>filters -> will need <code>bool</code> then <code>filters</code></p></li>
</ul>


<h2>relevance -> score meta data field for document match</h2>

<ul>
<li>things are ranked</li>
<li>filters are faster and don't have relevance (so if you don't care, go with fiters)</li>
<li>can boost relevance</li>
</ul>


<h2>multi-index multi-type</h2>

<ul>
<li>lots of power</li>
</ul>


<h2>Aggregation -> group by on steroids</h2>

<ul>
<li>SQL: group by the bucket</li>
<li>aggregator -> can do nested group by and data retrieval</li>
</ul>


<h2>Managing elastic search</h2>

<ul>
<li>clustering

<ul>
<li>odd number of nodes bigger than 1

<ul>
<li>3 shards and replication</li>
<li>a third node can shuffle the shards and the replicas</li>
</ul>
</li>
</ul>
</li>
</ul>


<h2>ELK Stack</h2>

<ul>
<li>elastic search, logstash, and kubana</li>
<li>logstash

<ul>
<li>want to parse and stash log data</li>
</ul>
</li>
<li>kubana

<ul>
<li>front end visualizer</li>
</ul>
</li>
<li>now beats added -> lightweight, written in go -> for shipping</li>
</ul>


<h2>Split Brain issue</h2>

<ul>
<li><a href="http://blog.trifork.com/2013/10/24/how-to-avoid-the-split-brain-problem-in-elasticsearch/">HOW TO AVOID THE SPLIT-BRAIN PROBLEM IN ELASTICSEARCH</a></li>
</ul>


<h2>Tinc</h2>

<ul>
<li>VPN -> encrypts traffic between servers</li>
</ul>


<h2>Setting up elastic search</h2>

<ul>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-elasticsearch-on-ubuntu-16-04">setting up a elasticsearch cluster on ubuntu</a></li>
<li>used a ruby case statement to set the master versus the replicas up</li>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/_basic_concepts.html">shards, replicas, documents explained</a></li>
<li><a href="https://qbox.io/blog/launching-and-scaling-elasticsearch">Thoughts on Launching and Scaling Elasticsearch</a></li>
<li><a href="https://qbox.io/blog/optimizing-elasticsearch-how-many-shards-per-index">optimizing sharding</a>

<ul>
<li><code>A good launch point for capacity planning is to allocate shards with a factor of 1.5 to 3 times the number of nodes in your initial configuration. If you're starting with 3 nodes, then we recommend that you specify at most 3 x 3 = 9 shards.</code></li>
<li><code>We reiterate that shards consume resources and require processing overhead.</code></li>
</ul>
</li>
<li>needed to bump vm.max_map_count according to <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html">these instructions</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-with-ufw-on-ubuntu-16-04">UFW</a> -> wasn't needed in the end</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stemming and faceted search]]></title>
    <link href="http://adamjonas.com/blog/stemming-and-faceted-search/"/>
    <updated>2015-06-12T09:32:00-04:00</updated>
    <id>http://adamjonas.com/blog/stemming-and-faceted-search</id>
    <content type="html"><![CDATA[<h2>Faceted Search</h2>

<p>Search of specific facets like a brand or size for a show search. These are limited set of values, not like a username or ID which could be anything. It's like a taxomony search.</p>

<p><a href="http://en.wikipedia.org/wiki/Faceted_search">Wikipedia</a></p>

<h2>Stemming</h2>

<p>Reduces the word to its root. So 'fishes' and 'fishing' to 'fish.'</p>

<p>This algorithm really hasn't been around that long. First proposed in '68 it gained popularity in the 80s.</p>

<p><a href="http://en.wikipedia.org/wiki/Stemming">Wikipedia</a></p>
]]></content>
  </entry>
  
</feed>
